# Generated by Django 5.1.7 on 2025-05-07 13:35

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUserProfileModels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('picture', models.ImageField(blank=True, default='media/default.jpg', null=True, upload_to='media/', verbose_name='Foto Anggota')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ProjekModels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('projectname', models.CharField(max_length=255, verbose_name='Nama Projek')),
                ('pic', models.CharField(max_length=255, verbose_name='PiC (Person in Charge)')),
                ('clientname', models.CharField(max_length=255, verbose_name='Nama Client')),
                ('status', models.CharField(choices=[('berlangsung', 'Berlangsung'), ('selesai', 'Selesai'), ('gagal', 'Gagal')], default='berlangsung', max_length=20, verbose_name='Status Projek')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to=settings.AUTH_USER_MODEL, verbose_name='Project Owner')),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
            },
        ),
        migrations.CreateModel(
            name='PlanningModels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deployment', models.TextField(verbose_name='Deployment')),
                ('maintenance', models.TextField(verbose_name='Maintenance')),
                ('operating', models.TextField(verbose_name='Operating System')),
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='Planning', to='app.projekmodels', verbose_name='Related Project')),
            ],
            options={
                'verbose_name': 'Planning',
                'verbose_name_plural': 'Plannings',
            },
        ),
        migrations.CreateModel(
            name='ObjectiveModels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organizational', models.TextField(verbose_name='Organizational Objectives')),
                ('leading_indicators', models.TextField(verbose_name='Leading Indicators')),
                ('user_outcomes', models.TextField(verbose_name='User Outcomes')),
                ('model_properties', models.TextField(verbose_name='Model Properties')),
                ('date_start', models.DateField(blank=True, null=True, verbose_name='Tanggal Mulai')),
                ('date_end', models.DateField(blank=True, null=True, verbose_name='Tanggal Selesai')),
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='objective', to='app.projekmodels', verbose_name='Related Project')),
            ],
            options={
                'verbose_name': 'Meaningful Objective',
                'verbose_name_plural': 'Meaningful Objectives',
            },
        ),
        migrations.CreateModel(
            name='LimitationModels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('limitation', models.TextField(verbose_name='Limitation')),
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='limitation', to='app.projekmodels', verbose_name='Related Project')),
            ],
            options={
                'verbose_name': 'Limitation',
                'verbose_name_plural': 'Limitations',
            },
        ),
        migrations.CreateModel(
            name='ImplementationModels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_process', models.TextField(verbose_name='Business Process')),
                ('technology', models.TextField(verbose_name='Used Technology')),
                ('build_process', models.TextField(verbose_name='Built Process')),
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='implementation', to='app.projekmodels', verbose_name='Related Project')),
            ],
            options={
                'verbose_name': 'Intelligence Implementation',
                'verbose_name_plural': 'Intelligence Implementations',
            },
        ),
        migrations.CreateModel(
            name='ExperienceModels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('automate', models.TextField(verbose_name='Automate')),
                ('prompt', models.TextField(verbose_name='Prompt')),
                ('annotate', models.TextField(verbose_name='Annotate')),
                ('organization', models.TextField(verbose_name='Organization')),
                ('system_objectives', models.TextField(verbose_name='System Objectives')),
                ('minimize_flaws', models.TextField(verbose_name='Minimize Intelligence Flaws')),
                ('create_data', models.TextField(verbose_name='Create data to grow')),
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='experience', to='app.projekmodels', verbose_name='Related Project')),
            ],
            options={
                'verbose_name': 'Intelligence Experience',
                'verbose_name_plural': 'Intelligence Experiences',
            },
        ),
        migrations.CreateModel(
            name='RealizationModels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('realization', models.TextField(verbose_name='Realization')),
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='realization', to='app.projekmodels', verbose_name='Related Project')),
            ],
            options={
                'verbose_name': 'Realization',
                'verbose_name_plural': 'Realizations',
            },
        ),
    ]
